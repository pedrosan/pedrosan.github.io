#!/usr/bin/perl -w 

#-------------------------------------------------------------------------------
# NUMBER RELATED
#   - dates
#   - hours am/pm
#   - hours a.m./p.m.
#   - dollar amounts
#   - percentages
#
# ACRONYMS
#   - acronyms: US
#
# EMOTICONS
#   - regular 
#   - (reverse) [not done]
#
# ELLIPSIS
#   - INLINE ellipsis
#
# REPEATED CHARACTERS
#   - DOLLAR
#   - STAR
#   - +
#   - -
#   - "a -- b" ==> replace with ","
#   - "a--b"   ==> replace with ","
#   - "! -- A" ==> REMOVE
#   - "A--A[a ']" ==> replace with ";"
#   - "a-- A" ==> replace with ";"
#   - "a-- a" ==> replace with ","
#   - LEAVE ONE (followed by space) : ,
#   - LEAVE ONE : _  (the % is handled separately when dealing with percentages)
#   - REMOVE ENTIRELY if 2+ : < > = #
#    
#-------------------------------------------------------------------------------

use feature 'unicode_strings';  # CHECK THIS SETTING (http://perldoc.perl.org/perlunifaq.html)
use utf8;

# use Text::Unidecode;
binmode STDIN, ':encoding(UTF-8)';
binmode STDOUT, ':encoding(UTF-8)';

use Getopt::Long;
Getopt::Long::Configure('no_ignore_case');

$debug=0;
GetOptions ('d|debug' => \$debug );

while (<STDIN>){

    chomp;
    if( $debug ) {  
        print "I: $_\n";
    } 
    
    #=========================================================================================
    # NUMBER RELATED
    #=========================================================================================
    
    #---------------------------------------
    # dates
    #-------
    if(/(?<![[:alnum:]\/])[0-9]{1,2}[\-\/][0-9]{1,2}[\-\/][0-9]{2,4}(?!([[:alnum:]\/]|:[0-9]))|(?<![[:alnum:]\/])[0-9]{2,4}[\-\/][0-9]{1,2}[\-\/][0-9]{1,2}(?!([[:alnum:]\/]|:[0-9]))/gi) { 
         s/(?<![[:alnum:]\/])([0-9]{1,2}[\-\/][0-9]{1,2}[\-\/][0-9]{2,4})(?![[:alnum:]\/])|(?<![[:alnum:]\/])([0-9]{2,4}[\-\/][0-9]{1,2}[\-\/][0-9]{1,2})(?![[:alnum:]\/])/<DATE_$&_DATE>/gi;
    } 
    #OLD# if(/(?<![[:alnum:]\/])[0-9]{1,2}[\-\/][0-9]{1,2}[\-\/][0-9]{2,4}(?![[:alnum:]\/])|(?<![[:alnum:]\/])[0-9]{2,4}[\-\/][0-9]{1,2}[\-\/][0-9]{1,2}(?![[:alnum:]\/])/gi){
    #OLD#     s/(?<![[:alnum:]\/])([0-9]{1,2}[\-\/][0-9]{1,2}[\-\/][0-9]{2,4})(?![[:alnum:]\/:])|(?<![[:alnum:]\/])([0-9]{2,4}[\-\/][0-9]{1,2}[\-\/][0-9]{1,2})(?![[:alnum:]\/:])/<DATE_$&_DATE>/gi;
    #OLD#     # print "$_";
    #OLD# }

    #---------------------------------------
    # hours am/pm
    #-------------
    s/\b([0-9]+(?:[:.][0-9]{1,2})?) *(a|p)m([^[:alpha:]]|$)/<HOUR_$1$2m_HOUR>$3/gi;

    #---------------------------------------
    # hours a.m./p.m.
    #-------------
    s/\b([0-9]+(?:[:.][0-9]{1,2})?) *(a|p)\.m\.([^[:alpha:]]|$)/<HOUR_$1$2m_HOUR>$3/gi; 
    # s/\b([0-9]+(?:[:.][0-9]{1,2})?) +(a|p)\.m\.([^[:alpha:]]|$)/<HOUR_$1$2m_HOUR>$3/gi; 
    # s/\b([0-9]+(?:[:.][0-9]{1,2})?) \b(a|p)\.m\.([^[:alpha:]]|$)/<HOUR_$1$2m_HOUR>$3/gi; 

    #---------------------------------------
    # dollar amounts
    #----------------
    s/([^[:alnum:]_]*)(\$[[:digit:],.-]*[[:digit:]][-]*[[:alpha:]]*)\b/$1 <DOLLARAMOUNT_$2_DOLLARAMOUNT> /gi;

    #---------------------------------------
    # percentages
    #-------------
    s/%+/%/g;
    s/ %([0-9]+) / $1% /gi;     
    s/([0-9])\.{2,}([0-9]+%)/$1$2/gi;
    s/([[:alpha:]])\.{2,}([0-9]+%)/$1 $2/gi;
    s/\b([0-9.-]*[0-9][0-9.-]*) ?%(?![[:alpha:]])/<PERCENTAGE_$1%_PERCENTAGE> /gi; 


    #=========================================================================================
    # ACRONYMS
    #=========================================================================================
    
    #---------------------------------------
    # acronyms: US
    #--------------
    
    s/(^|[ ("-])\bu\.s\.a([^[:alpha:]]|$)/$1<USA>$2/gi; 
    s/(^|[ ("-])\bu\.s\./$1<USA>/gi; 
    

    #=========================================================================================
    # EMOTICONS
    #=========================================================================================
    
    #---------------------------------------
    # regular 
    #---------
    
    # s/[[:space:]]?([<>\(=]?[:;=][-o*]?[][}{)(DPp\\@\|\/]+)/ <EMOJ_$1_EMOJ> /g;
    # s/[[:space:]]?([<>\(=]?[8][-o*]?[][}{)(DPp\\@\|\/]+)/ <EMOJ_$1_EMOJ> /g;
    # s/<3+/ <EMOJ_<3_EMOJ> /g;
   
    s/(?<![A-Z])[[:space:]]?([<>\(=]?[:;=][-o*]?[][}{)(DPp\\@\|\/]+)(?![0-9mM])/ <EMOJ_$1_EMOJ> /g;
    # s/(?<![A-Z])[[:space:]]?([<>\(=]?[8][-o*]?[][}{)(DPp\\@\|\/]+)(?![0-9mM])/ <EMOJ_$1_EMOJ> /g;
    s/(?<![A-Z])[[:space:]]?([<>\(=]?[8][-o*]?[][}{)(DP\\@\|\/]+)(?![0-9A-Za-z])/ <EMOJ_$1_EMOJ> /g;
    s/<3+/ <EMOJ_HEART_EMOJ> /g;


    #---------------------------------------
    # reverse
    # s/[[:space:]]?(\(:|\(;|\):|\/:|\(\):)/ <EMOJR $1 EMOJR> /g;

    
    #=========================================================================================
    # ELLIPSIS
    #=========================================================================================
    
    #---------------------------------------
    # INLINE ellipsis
    #-----------------
    
    # these two leave 23054 rows with some form of ...
    s|([^[:space:].]{0,2})[[:space:].]{3,}([a-z0-9])|$1 <SPACE> $2|g;
    s|([^[:space:].]{0,5})[[:space:].]{3,}([A-Z])|$1.<PERIOD> $2|g;
    
    # adding this decreases it to 12189
    s|[[:space:].]{3,}([)("'])| <SPACE_NEW> $1|g;
    
    # adding this decreases it to  9727
    s|[[:space:].]{3,}([!?])| <SPACE_MARK> $1|g;
    
    # adding this decreases it to  9434
    s|[[:space:].]{3,}([,?])| <SPACE_MARK> $1|g;

    # adding this decreases it to  6747
    s|[[:space:].]{3,}(<EMOJ_)| <SPACE_PREMOJ> $1|g;
    #s|[[:space:].]{3,}(<EMOJ_)| <SPACE_MARK> $1|g;
    

    #=========================================================================================
    # REPEATED CHARACTERS
    #=========================================================================================
    
    #------------------------------------------------
    # DOLLAR
    #---------
    s/[a@]\$\$/<ASS>/gi;
    s/<ASS>hole[[:alpha:]]*\b/<PROFANITY>/gi;

    # s/[^a@]\${2,4}/<MONEY>/g;

    s/([a-z]) \${2,} /$1 <MONEY> /gi;
    s/ \${2,} ([a-z.])/ <MONEY> $1/gi;
    s/ \${2,}([,\!])/ <MONEY>$1/gi;
    s/([a-z]) \${2,}([.?])/$1 <MONEY>$2/gi;
    s/ \${2,}$/ <MONEY>/gi;

    #------------------------------------------------
    # STAR
    #---------
    s/\b[[:alpha:]]+\*{2,}[[:alpha:]]+\b/ <PROFANITY_disguised_PROFANITY> /gi;
    s/\*{2,}/ /g;

    #------------------------------------------------
    # +
    #---------
    s/\+{3,}/ /g;
    s/[^AC]\+\+/ /g;

    #------------------------------------------------
    # -
    # "a -- b" ==> replace with ","
    # "a--b"   ==> replace with ","
    # "! -- A" ==> REMOVE
    # "A--A[a ']" ==> replace with ";"
    # "a-- A" ==> replace with ";"
    # "a-- a" ==> replace with ","
    # "! --A" ==> REMOVE
    #---------
    s/([a-z]) +-{2,} +([a-z])/$1, $2/g;
    s/([a-z])-{2,}([a-z])/$1, $2/g;
    s/([^[:alnum:]]) +-{2,} +([A-Z])/$1 $2/g;
    s/([[:alpha:]])\-{2,}([[:alpha:]][[:alpha:] \'])/$1\; $2/g;
    s/([a-z])-{2,} +([A-Z])/$1; $2/g;
    s/([a-z])-{2,} +([a-z])/$1, $2/g;
    s/([^[:alnum:]]) -{2,}([A-Z])/$1 $2/g;
    s/([0-9]) +-{2,} +([a-z])/$1, $2/g;
    s/([0-9])-{2,}([a-z])/$1, $2/g;

    #------------------------------------------------
    # LEAVE ONE (followed by space) : ,
    #---------
    # s/([,])\1+/\1 /g;
    s/([,])\1+/$1 /g;

    #------------------------------------------------
    # LEAVE ONE : _  (the % is handled separately when dealing with percentages)
    #---------
    # s/([_])\1+/\1/g;
    s/([_])\1+/$1/g;
    # s/([%_])\1+/\1/g;

    #------------------------------------------------
    # REMOVE ENTIRELY if 2+ : < > = #
    #---------
    s/([<>=#])\1+/ /g;


    #=========================================================================================
    
    if( $debug ) {  
        print "O: $_\n";
        print "-----\n";
    } else {
        print "$_\n";
    }

    #---------------------------------------------------
    # 
    #---------------------------------------------------

    #---------------------------------------------------
    # AFTER THIS SCRIPT:
    #
    #  - contractions
    #  - squeeze extra white spaces 
    #    - inject white spaces where appropriate (?)
    #---------------------------------------------------
}

exit;

#-----------------------------------------------------------
